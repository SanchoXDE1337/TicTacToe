{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","refresh","renderSquare","React","Component","Game","lines","length","a","b","c","indexOf","ReactDOM","render","document","getElementById"],"mappings":"sLAKA,SAASA,EAAOC,GACZ,OACI,4BACIC,UAAU,SACVC,QAASF,EAAME,SAEdF,EAAMG,O,IAKbC,E,YACF,WAAYJ,GAAQ,IAAD,8BACf,4CAAMA,KACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,yEAQPC,GACR,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAMC,KAAKN,MAAMI,QAAU,IAAM,IACzCE,KAAKG,SAAS,CACVR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,gCAKzB,IAAMH,EAAWC,MAAM,GAAGC,KAAK,MAC/BG,KAAKG,SAAS,CACVR,QAASA,EACTG,SAAS,M,mCAIJC,GAAI,IAAD,OACZ,OAAO,kBAACX,EAAD,CACHI,MAASQ,KAAKN,MAAMC,QAAQI,GAC5BR,QAAW,kBAAM,EAAKa,YAAYL,Q,+BAIhC,IAEFM,EAFC,OACCC,EAASJ,EAAgBF,KAAKN,MAAMC,SAa1C,OATQU,EAFJC,EACe,SAAXA,EACM,OAEA,kBAAcA,GAIlB,uBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAIpD,6BACI,yBAAKR,UAAU,UAAUe,GACzB,4BAAQb,MAAM,UAAUF,UAAU,WAAWC,QAAS,kBAAM,EAAKgB,YAAjE,WACA,yBAAKjB,UAAU,aACVU,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,IAEvB,yBAAKlB,UAAU,aACVU,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,IAEvB,yBAAKlB,UAAU,aACVU,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,S,GAnEnBC,IAAMC,WA0EpBC,E,iLAEE,OACI,yBAAKrB,UAAU,QACX,yBAAKA,UAAU,cACX,kBAACG,EAAD,OAEJ,yBAAKH,UAAU,aACX,8BACA,mC,GATDmB,IAAMC,WAgBzB,SAASR,EAAgBP,GAWrB,IAVA,IAAMiB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACjBa,EAAMb,GADW,GAC5Be,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIrB,EAAQmB,IAAOnB,EAAQmB,KAAOnB,EAAQoB,IAAQpB,EAAQmB,KAAOnB,EAAQqB,GACrE,OAAOrB,EAAQmB,GAGvB,OAA+B,IAA3BnB,EAAQsB,QAAQ,MACT,OAEJ,KAMXC,IAASC,OACL,kBAACR,EAAD,MACAS,SAASC,eAAe,U","file":"static/js/main.7c15e70b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = (this.state.xIsNext ? 'X' : 'O');\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    refresh() {\r\n        const squares =  Array(9).fill(null);\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: true\r\n        });\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return <Square\r\n            value = {this.state.squares[i]}\r\n            onClick = {() => this.handleClick(i)}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner) {\r\n            if (winner === 'Draw') {\r\n                status = `Draw`;\r\n            } else {\r\n                status = `Winner: ${winner}`;\r\n            }\r\n        }\r\n        else {\r\n            status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <button value='Refresh' className='refrButt' onClick={() => this.refresh()}>Refresh</button>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && (squares[a] === squares[b]) && (squares[a] === squares[c])) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    if (squares.indexOf(null) === -1) {\r\n        return 'Draw';\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n/*\r\nclass Square extends React.Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                className=\"square\"\r\n                onClick = {() => {this.props.onClick()}}\r\n            >\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}*/"],"sourceRoot":""}